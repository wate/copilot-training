---
# code: language=ansible
## -----------------------------------
## とりあえずAIに生成させただけの代物、色々と手直しが必要なため要修正
## -----------------------------------
- name: Deploy CakePHP Application
  hosts: all
  become: false
  tasks:
    - name: ソースコードのチェックアウト
      ansible.builtin.git:
        repo: "{{ app_repo }}"
        dest: "{{ app_deploy_path }}"
        version: "{{ app_repo_branch }}"
      register: checkout_result
    - name: セットアップ処理
      when: checkout_result is changed
      block:
        - name: 新規セットアップ処理
          when: not checkout_result.before
          block:
            - name: Composerの依存パッケージをインストール
              community.general.composer:
                command: install
                working_dir: "{{ app_deploy_path }}"
                no_dev: true
                optimize_autoloader: true
                no_interaction: true
            - name: 設定ファイルをコピー
              ansible.builtin.copy:
                src: "{{ app_deploy_path }}/config/app_local.example.php"
                dest: "{{ app_deploy_path }}/config/app_local.php"
                remote_src: true
                force: false
            - name: 一時ディレクトリの作成
              ansible.builtin.file:
                path: "{{ app_deploy_path }}/{{ item }}"
                state: directory
                mode: '0775'
              loop:
                - tmp/cache/models
                - tmp/cache/persistent
                - tmp/cache/views
                - tmp/sessions
                - tmp/tests
                - tmp/debug_kit
                - logs
            - name: セキュリティソルトの設定
              ansible.builtin.replace:
                path: "{{ app_deploy_path }}/config/app_local.php"
                regexp: "'SecuritySalt'.*"
                replace: "'SecuritySalt' => env('SECURITY_SALT', '{{ security_salt }}'),"
              when: security_salt is defined
            - name: データベースマイグレーションの実行
              ansible.builtin.command:
                cmd: bin/cake migrations migrate
                chdir: "{{ app_deploy_path }}"
              environment:
                DATABASE_URL: "{{ database_url | default('') }}"
                DEBUG: "{{ debug | default('false') }}"
                SECURITY_SALT: "{{ security_salt | default('') }}"
        - name: Composerの依存パッケージを更新
          community.general.composer:
            command: install
            working_dir: "{{ app_deploy_path }}"
            no_dev: true
            optimize_autoloader: true
            no_interaction: true
        - name: 一時ディレクトリの権限を設定
          ansible.builtin.file:
            path: "{{ app_deploy_path }}/{{ item }}"
            state: directory
            mode: '0775'
          loop:
            - tmp
            - logs
        - name: キャッシュをクリア
          ansible.builtin.command:
            cmd: bin/cake cache clear_all
            chdir: "{{ app_deploy_path }}"
          environment:
            DEBUG: "{{ debug | default('false') }}"
        - name: アセットのシンボリックリンクを作成
          ansible.builtin.command:
            cmd: bin/cake plugin assets symlink
            chdir: "{{ app_deploy_path }}"
          environment:
            DEBUG: "{{ debug | default('false') }}"
          when: create_asset_symlinks | default(false) | bool
        - name: データベースマイグレーションの実行
          ansible.builtin.command:
            cmd: bin/cake migrations migrate
            chdir: "{{ app_deploy_path }}"
        - name: ORMキャッシュの再構築
          when: rebuild_orm_cache | default('false') | bool
          block:
            - name: ORMキャッシュのクリア
              ansible.builtin.command:
                cmd: bin/cake orm_cache clear
                chdir: "{{ app_deploy_path }}"
            - name: ORMキャッシュの構築
              ansible.builtin.command:
                cmd: bin/cake orm_cache build
                chdir: "{{ app_deploy_path }}"
        - name: デプロイ完了時の通知処理
          ## @see https://docs.ansible.com/ansible/latest/collections/community/general/slack_module.html
          community.general.slack:
            token: "{{ lookup('env', 'SLACK_TOKEN') }}"
            channel: "{{ lookup('env', 'SLACK_CHANNEL') | default(omit, true) }}"
            username: "{{ lookup('env', 'SLACK_USERNAME') | default(omit, true) }}"
            color: "#00ff00"
            msg: '{{ inventory_hostname }}へのデプロイが完了しました。'
          when: lookup('env', 'SLACK_TOKEN') | length > 0
      rescue:
        - name: デプロイ失敗時の通知処理
          ## @see https://docs.ansible.com/ansible/latest/collections/community/general/slack_module.html
          community.general.slack:
            token: "{{ lookup('env', 'SLACK_TOKEN') }}"
            channel: "{{ lookup('env', 'SLACK_CHANNEL') | default(omit, true) }}"
            username: "{{ lookup('env', 'SLACK_USERNAME') | default(omit, true) }}"
            color: "#ff0000"
            msg: '{{ inventory_hostname }}へのデプロイに失敗しました。'
          when: lookup('env', 'SLACK_TOKEN') | length > 0
